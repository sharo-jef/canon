type: Program
body:
  - type: SchemaDirective
    path: ./schema.canon
    loc:
      start:
        line: 1
        column: 0
      end:
        line: 1
        column: 24
  - type: CallExpression
    callee:
      type: Identifier
      name: PluginHeader
      loc:
        start:
          line: 3
          column: 0
        end:
          line: 3
          column: 12
    arguments:
      - type: LambdaExpression
        parameters: []
        body:
          - type: AssignmentStatement
            operator: '='
            left:
              type: Identifier
              name: name
              loc:
                start:
                  line: 4
                  column: 4
                end:
                  line: 4
                  column: 8
            right:
              type: StringLiteral
              value: Plugin1
              raw: '''Plugin1'''
              loc:
                start:
                  line: 4
                  column: 11
                end:
                  line: 4
                  column: 20
            loc:
              start:
                line: 4
                column: 4
              end:
                line: 4
                column: 20
          - type: AssignmentStatement
            operator: '='
            left:
              type: Identifier
              name: description
              loc:
                start:
                  line: 5
                  column: 4
                end:
                  line: 5
                  column: 15
            right:
              type: StringLiteral
              value: Description of plugin1
              raw: '''Description of plugin1'''
              loc:
                start:
                  line: 5
                  column: 18
                end:
                  line: 5
                  column: 42
            loc:
              start:
                line: 5
                column: 4
              end:
                line: 5
                column: 42
        loc:
          start:
            line: 3
            column: 13
          end:
            line: 6
            column: 1
    loc:
      start:
        line: 3
        column: 0
      end:
        line: 6
        column: 1
  - type: VariableDeclaration
    kind: val
    name:
      type: Identifier
      name: goBuild
      loc:
        start:
          line: 8
          column: 4
        end:
          line: 8
          column: 11
    typeRef: null
    value:
      type: StringLiteral
      value: go build
      raw: '''go build'''
      loc:
        start:
          line: 8
          column: 14
        end:
          line: 8
          column: 24
    annotations: []
    loc:
      start:
        line: 8
        column: 0
      end:
        line: 8
        column: 24
  - type: VariableDeclaration
    kind: var
    name:
      type: Identifier
      name: goTest
      loc:
        start:
          line: 9
          column: 4
        end:
          line: 9
          column: 10
    typeRef: null
    value:
      type: BinaryExpression
      operator: +
      left:
        type: BinaryExpression
        operator: +
        left:
          type: StringLiteral
          value: go
          raw: '''go'''
          loc:
            start:
              line: 9
              column: 13
            end:
              line: 9
              column: 17
        right:
          type: StringLiteral
          value: ' '
          raw: ''' '''
          loc:
            start:
              line: 9
              column: 20
            end:
              line: 9
              column: 23
        loc:
          start:
            line: 9
            column: 13
          end:
            line: 9
            column: 23
      right:
        type: StringLiteral
        value: test
        raw: '''test'''
        loc:
          start:
            line: 9
            column: 26
          end:
            line: 9
            column: 32
      loc:
        start:
          line: 9
          column: 13
        end:
          line: 9
          column: 32
    annotations: []
    loc:
      start:
        line: 9
        column: 0
      end:
        line: 9
        column: 32
  - type: FunctionDeclaration
    isInfix: false
    receiverType: null
    name:
      type: Identifier
      name: join
      loc:
        start:
          line: 11
          column: 4
        end:
          line: 11
          column: 8
    annotations: []
    parameters:
      - type: Parameter
        name:
          type: Identifier
          name: a
          loc:
            start:
              line: 11
              column: 9
            end:
              line: 11
              column: 10
        typeRef:
          type: PrimitiveType
          name: string
          loc:
            start:
              line: 11
              column: 12
            end:
              line: 11
              column: 18
        loc:
          start:
            line: 11
            column: 9
          end:
            line: 11
            column: 18
      - type: Parameter
        name:
          type: Identifier
          name: b
          loc:
            start:
              line: 11
              column: 20
            end:
              line: 11
              column: 21
        typeRef:
          type: PrimitiveType
          name: string
          loc:
            start:
              line: 11
              column: 23
            end:
              line: 11
              column: 29
        loc:
          start:
            line: 11
            column: 20
          end:
            line: 11
            column: 29
    returnType:
      type: PrimitiveType
      name: string
      loc:
        start:
          line: 11
          column: 32
        end:
          line: 11
          column: 38
    body:
      - type: ExpressionStatement
        expression:
          type: BinaryExpression
          operator: +
          left:
            type: Identifier
            name: a
            loc:
              start:
                line: 12
                column: 4
              end:
                line: 12
                column: 5
          right:
            type: Identifier
            name: b
            loc:
              start:
                line: 12
                column: 8
              end:
                line: 12
                column: 9
          loc:
            start:
              line: 12
              column: 4
            end:
              line: 12
              column: 9
        loc:
          start:
            line: 12
            column: 4
          end:
            line: 12
            column: 9
    loc:
      start:
        line: 11
        column: 0
      end:
        line: 13
        column: 1
  - type: FunctionDeclaration
    isInfix: false
    receiverType: null
    name:
      type: Identifier
      name: empty
      loc:
        start:
          line: 15
          column: 4
        end:
          line: 15
          column: 9
    annotations: []
    parameters: []
    returnType: null
    body: []
    loc:
      start:
        line: 15
        column: 0
      end:
        line: 15
        column: 14
  - type: VariableDeclaration
    kind: val
    name:
      type: Identifier
      name: joinLambda
      loc:
        start:
          line: 17
          column: 4
        end:
          line: 17
          column: 14
    typeRef:
      type: FunctionType
      parameterTypes:
        - type: PrimitiveType
          name: string
          loc:
            start:
              line: 17
              column: 17
            end:
              line: 17
              column: 23
        - type: PrimitiveType
          name: string
          loc:
            start:
              line: 17
              column: 25
            end:
              line: 17
              column: 31
      returnType:
        type: PrimitiveType
        name: string
        loc:
          start:
            line: 17
            column: 36
          end:
            line: 17
            column: 42
      loc:
        start:
          line: 17
          column: 16
        end:
          line: 17
          column: 42
    value:
      type: LambdaExpression
      parameters:
        - type: LambdaParameter
          name: a
          typeAnnotation: null
          loc:
            start:
              line: 17
              column: 47
            end:
              line: 17
              column: 48
        - type: LambdaParameter
          name: b
          typeAnnotation: null
          loc:
            start:
              line: 17
              column: 50
            end:
              line: 17
              column: 51
      body:
        - type: ExpressionStatement
          expression:
            type: BinaryExpression
            operator: +
            left:
              type: Identifier
              name: a
              loc:
                start:
                  line: 17
                  column: 55
                end:
                  line: 17
                  column: 56
            right:
              type: Identifier
              name: b
              loc:
                start:
                  line: 17
                  column: 59
                end:
                  line: 17
                  column: 60
            loc: &ref_0
              start:
                line: 17
                column: 55
              end:
                line: 17
                column: 60
          loc: *ref_0
      loc:
        start:
          line: 17
          column: 45
        end:
          line: 17
          column: 62
    annotations: []
    loc:
      start:
        line: 17
        column: 0
      end:
        line: 17
        column: 62
  - type: AssignmentStatement
    operator: +=
    left:
      type: Identifier
      name: goTest
      loc:
        start:
          line: 19
          column: 0
        end:
          line: 19
          column: 6
    right:
      type: BinaryExpression
      operator: +
      left:
        type: StringLiteral
        value: ' '
        raw: ''' '''
        loc:
          start:
            line: 19
            column: 10
          end:
            line: 19
            column: 13
      right:
        type: CallExpression
        callee:
          type: Identifier
          name: joinLambda
          loc:
            start:
              line: 19
              column: 16
            end:
              line: 19
              column: 26
        arguments:
          - type: NonNullAssertionExpression
            operand:
              type: CallExpression
              callee:
                type: Identifier
                name: getEnv
                loc:
                  start:
                    line: 19
                    column: 27
                  end:
                    line: 19
                    column: 33
              arguments:
                - type: StringLiteral
                  value: PIPELINE_HOME_PATH
                  raw: '''PIPELINE_HOME_PATH'''
                  loc:
                    start:
                      line: 19
                      column: 34
                    end:
                      line: 19
                      column: 54
              loc:
                start:
                  line: 19
                  column: 27
                end:
                  line: 19
                  column: 55
            loc:
              start:
                line: 19
                column: 27
              end:
                line: 19
                column: 56
          - type: StringLiteral
            value: /test
            raw: '''/test'''
            loc:
              start:
                line: 19
                column: 58
              end:
                line: 19
                column: 65
        loc:
          start:
            line: 19
            column: 16
          end:
            line: 19
            column: 66
      loc:
        start:
          line: 19
          column: 10
        end:
          line: 19
          column: 66
    loc:
      start:
        line: 19
        column: 0
      end:
        line: 19
        column: 66
  - type: CallExpression
    callee:
      type: Identifier
      name: pipeline
      loc:
        start:
          line: 21
          column: 0
        end:
          line: 21
          column: 8
    arguments:
      - type: LambdaExpression
        parameters: []
        body:
          - type: ExpressionStatement
            expression:
              type: CallExpression
              callee:
                type: Identifier
                name: build
                loc:
                  start:
                    line: 22
                    column: 4
                  end:
                    line: 22
                    column: 9
              arguments:
                - type: LambdaExpression
                  parameters: []
                  body:
                    - type: AssignmentStatement
                      operator: '='
                      left:
                        type: Identifier
                        name: command
                        loc:
                          start:
                            line: 23
                            column: 8
                          end:
                            line: 23
                            column: 15
                      right:
                        type: BinaryExpression
                        operator: +
                        left:
                          type: Identifier
                          name: goBuild
                          loc:
                            start:
                              line: 23
                              column: 18
                            end:
                              line: 23
                              column: 25
                        right:
                          type: TypeCastExpression
                          targetType: string
                          expression:
                            type: InfixCall
                            functionName: add
                            left:
                              type: InfixCall
                              functionName: add
                              left:
                                type: IntegerLiteral
                                value: 1
                                raw: '1'
                                loc:
                                  start:
                                    line: 23
                                    column: 35
                                  end:
                                    line: 23
                                    column: 36
                              right:
                                type: IntegerLiteral
                                value: 2
                                raw: '2'
                                loc:
                                  start:
                                    line: 23
                                    column: 41
                                  end:
                                    line: 23
                                    column: 42
                              loc:
                                start:
                                  line: 23
                                  column: 35
                                end:
                                  line: 23
                                  column: 42
                            right:
                              type: IntegerLiteral
                              value: 3
                              raw: '3'
                              loc:
                                start:
                                  line: 23
                                  column: 47
                                end:
                                  line: 23
                                  column: 48
                            loc:
                              start:
                                line: 23
                                column: 35
                              end:
                                line: 23
                                column: 48
                          loc:
                            start:
                              line: 23
                              column: 28
                            end:
                              line: 23
                              column: 49
                        loc:
                          start:
                            line: 23
                            column: 18
                          end:
                            line: 23
                            column: 49
                      loc:
                        start:
                          line: 23
                          column: 8
                        end:
                          line: 23
                          column: 49
                  loc:
                    start:
                      line: 22
                      column: 10
                    end:
                      line: 24
                      column: 5
              loc:
                start:
                  line: 22
                  column: 4
                end:
                  line: 24
                  column: 5
            loc:
              start:
                line: 22
                column: 4
              end:
                line: 24
                column: 5
          - type: ExpressionStatement
            expression:
              type: CallExpression
              callee:
                type: Identifier
                name: test
                loc:
                  start:
                    line: 25
                    column: 4
                  end:
                    line: 25
                    column: 8
              arguments:
                - type: LambdaExpression
                  parameters: []
                  body:
                    - type: AssignmentStatement
                      operator: '='
                      left:
                        type: Identifier
                        name: script
                        loc:
                          start:
                            line: 26
                            column: 8
                          end:
                            line: 26
                            column: 14
                      right:
                        type: Identifier
                        name: goTest
                        loc:
                          start:
                            line: 26
                            column: 17
                          end:
                            line: 26
                            column: 23
                      loc:
                        start:
                          line: 26
                          column: 8
                        end:
                          line: 26
                          column: 23
                  loc:
                    start:
                      line: 25
                      column: 9
                    end:
                      line: 27
                      column: 5
              loc:
                start:
                  line: 25
                  column: 4
                end:
                  line: 27
                  column: 5
            loc:
              start:
                line: 25
                column: 4
              end:
                line: 27
                column: 5
        loc:
          start:
            line: 21
            column: 9
          end:
            line: 28
            column: 1
    loc:
      start:
        line: 21
        column: 0
      end:
        line: 28
        column: 1
  - type: VariableDeclaration
    kind: val
    name:
      type: Identifier
      name: a
      loc:
        start:
          line: 29
          column: 4
        end:
          line: 29
          column: 5
    typeRef: null
    value:
      type: LambdaExpression
      parameters: []
      body: []
      loc:
        start:
          line: 29
          column: 8
        end:
          line: 29
          column: 10
    annotations: []
    loc:
      start:
        line: 29
        column: 0
      end:
        line: 29
        column: 10
  - type: VariableDeclaration
    kind: val
    name:
      type: Identifier
      name: c
      loc:
        start:
          line: 31
          column: 4
        end:
          line: 31
          column: 5
    typeRef: null
    value:
      type: LambdaExpression
      parameters:
        - type: LambdaParameter
          name: x
          typeAnnotation:
            type: PrimitiveType
            name: int
            loc:
              start:
                line: 31
                column: 13
              end:
                line: 31
                column: 16
          loc:
            start:
              line: 31
              column: 10
            end:
              line: 31
              column: 16
      body:
        - type: ExpressionStatement
          expression:
            type: BinaryExpression
            operator: +
            left:
              type: Identifier
              name: x
              loc:
                start:
                  line: 31
                  column: 20
                end:
                  line: 31
                  column: 21
            right:
              type: IntegerLiteral
              value: 2
              raw: '2'
              loc:
                start:
                  line: 31
                  column: 24
                end:
                  line: 31
                  column: 25
            loc: &ref_1
              start:
                line: 31
                column: 20
              end:
                line: 31
                column: 25
          loc: *ref_1
      loc:
        start:
          line: 31
          column: 8
        end:
          line: 31
          column: 27
    annotations: []
    loc:
      start:
        line: 31
        column: 0
      end:
        line: 31
        column: 27
  - type: VariableDeclaration
    kind: val
    name:
      type: Identifier
      name: d
      loc:
        start:
          line: 32
          column: 4
        end:
          line: 32
          column: 5
    typeRef: null
    value:
      type: LambdaExpression
      parameters:
        - type: LambdaParameter
          name: x
          typeAnnotation:
            type: PrimitiveType
            name: int
            loc:
              start:
                line: 32
                column: 13
              end:
                line: 32
                column: 16
          loc:
            start:
              line: 32
              column: 10
            end:
              line: 32
              column: 16
        - type: LambdaParameter
          name: 'y'
          typeAnnotation:
            type: PrimitiveType
            name: int
            loc:
              start:
                line: 32
                column: 21
              end:
                line: 32
                column: 24
          loc:
            start:
              line: 32
              column: 18
            end:
              line: 32
              column: 24
      body:
        - type: ExpressionStatement
          expression:
            type: BinaryExpression
            operator: +
            left:
              type: Identifier
              name: x
              loc:
                start:
                  line: 32
                  column: 28
                end:
                  line: 32
                  column: 29
            right:
              type: Identifier
              name: 'y'
              loc:
                start:
                  line: 32
                  column: 32
                end:
                  line: 32
                  column: 33
            loc: &ref_2
              start:
                line: 32
                column: 28
              end:
                line: 32
                column: 33
          loc: *ref_2
      loc:
        start:
          line: 32
          column: 8
        end:
          line: 32
          column: 35
    annotations: []
    loc:
      start:
        line: 32
        column: 0
      end:
        line: 32
        column: 35
  - type: VariableDeclaration
    kind: val
    name:
      type: Identifier
      name: e
      loc:
        start:
          line: 33
          column: 4
        end:
          line: 33
          column: 5
    typeRef: null
    value:
      type: LambdaExpression
      parameters: []
      body:
        - type: ExpressionStatement
          expression:
            type: StringLiteral
            value: hello
            raw: '"hello"'
            loc: &ref_3
              start:
                line: 33
                column: 13
              end:
                line: 33
                column: 20
          loc: *ref_3
      loc:
        start:
          line: 33
          column: 8
        end:
          line: 33
          column: 22
    annotations: []
    loc:
      start:
        line: 33
        column: 0
      end:
        line: 33
        column: 22
  - type: VariableDeclaration
    kind: val
    name:
      type: Identifier
      name: f
      loc:
        start:
          line: 34
          column: 4
        end:
          line: 34
          column: 5
    typeRef: null
    value:
      type: LambdaExpression
      parameters:
        - type: LambdaParameter
          name: x
          typeAnnotation:
            type: PrimitiveType
            name: int
            loc:
              start:
                line: 34
                column: 13
              end:
                line: 34
                column: 16
          loc:
            start:
              line: 34
              column: 10
            end:
              line: 34
              column: 16
      body: []
      loc:
        start:
          line: 34
          column: 8
        end:
          line: 34
          column: 21
    annotations: []
    loc:
      start:
        line: 34
        column: 0
      end:
        line: 34
        column: 21
  - type: VariableDeclaration
    kind: val
    name:
      type: Identifier
      name: g
      loc:
        start:
          line: 35
          column: 4
        end:
          line: 35
          column: 5
    typeRef: null
    value:
      type: LambdaExpression
      parameters: []
      body: []
      loc:
        start:
          line: 35
          column: 8
        end:
          line: 35
          column: 12
    annotations: []
    loc:
      start:
        line: 35
        column: 0
      end:
        line: 35
        column: 12
loc:
  start:
    line: 1
    column: 0
  end:
    line: 36
    column: 5
