// Generated from definition/CanonLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CanonLexer extends Lexer {
	public static readonly WS = 1;
	public static readonly LINE_COMMENT = 2;
	public static readonly BLOCK_COMMENT = 3;
	public static readonly SCHEMA_DIRECTIVE = 4;
	public static readonly HASH_COMMENT = 5;
	public static readonly SCHEMA = 6;
	public static readonly STRUCT = 7;
	public static readonly UNION = 8;
	public static readonly TYPE = 9;
	public static readonly INIT = 10;
	public static readonly PRIVATE = 11;
	public static readonly GET = 12;
	public static readonly REPEATED = 13;
	public static readonly USE = 14;
	public static readonly IF = 15;
	public static readonly ERROR = 16;
	public static readonly AND = 17;
	public static readonly OR = 18;
	public static readonly NOT = 19;
	public static readonly THIS = 20;
	public static readonly STRING_TYPE = 21;
	public static readonly INT_TYPE = 22;
	public static readonly BOOL_TYPE = 23;
	public static readonly PLUS = 24;
	public static readonly MINUS = 25;
	public static readonly MULTIPLY = 26;
	public static readonly DIVIDE = 27;
	public static readonly MODULO = 28;
	public static readonly EQUALS = 29;
	public static readonly NOT_EQUALS = 30;
	public static readonly LESS_THAN = 31;
	public static readonly GREATER_THAN = 32;
	public static readonly LESS_EQUALS = 33;
	public static readonly GREATER_EQUALS = 34;
	public static readonly ASSIGN = 35;
	public static readonly LOGICAL_AND = 36;
	public static readonly LOGICAL_OR = 37;
	public static readonly LBRACE = 38;
	public static readonly RBRACE = 39;
	public static readonly LPAREN = 40;
	public static readonly RPAREN = 41;
	public static readonly LBRACKET = 42;
	public static readonly RBRACKET = 43;
	public static readonly DOT = 44;
	public static readonly COMMA = 45;
	public static readonly COLON = 46;
	public static readonly SEMICOLON = 47;
	public static readonly QUESTION = 48;
	public static readonly ARROW = 49;
	public static readonly PIPE = 50;
	public static readonly STRING_LITERAL = 51;
	public static readonly DOUBLE_STRING_LITERAL = 52;
	public static readonly TEMPLATE_STRING_START = 53;
	public static readonly INTEGER_LITERAL = 54;
	public static readonly TRUE = 55;
	public static readonly FALSE = 56;
	public static readonly ANNOTATION = 57;
	public static readonly IDENTIFIER = 58;
	public static readonly TEMPLATE_STRING_END = 59;
	public static readonly TEMPLATE_STRING_PART = 60;
	public static readonly TEMPLATE_INTERPOLATION = 61;
	public static readonly TEMPLATE_MODE = 1;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE", "TEMPLATE_MODE",
	];

	public static readonly ruleNames: string[] = [
		"WS", "LINE_COMMENT", "BLOCK_COMMENT", "SCHEMA_DIRECTIVE", "HASH_COMMENT", 
		"SCHEMA", "STRUCT", "UNION", "TYPE", "INIT", "PRIVATE", "GET", "REPEATED", 
		"USE", "IF", "ERROR", "AND", "OR", "NOT", "THIS", "STRING_TYPE", "INT_TYPE", 
		"BOOL_TYPE", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "MODULO", "EQUALS", 
		"NOT_EQUALS", "LESS_THAN", "GREATER_THAN", "LESS_EQUALS", "GREATER_EQUALS", 
		"ASSIGN", "LOGICAL_AND", "LOGICAL_OR", "LBRACE", "RBRACE", "LPAREN", "RPAREN", 
		"LBRACKET", "RBRACKET", "DOT", "COMMA", "COLON", "SEMICOLON", "QUESTION", 
		"ARROW", "PIPE", "STRING_LITERAL", "DOUBLE_STRING_LITERAL", "TEMPLATE_STRING_START", 
		"INTEGER_LITERAL", "TRUE", "FALSE", "ANNOTATION", "IDENTIFIER", "EscapeSequence", 
		"TEMPLATE_STRING_END", "TEMPLATE_STRING_PART", "TEMPLATE_INTERPOLATION",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, "'#schema'", undefined, "'schema'", 
		"'struct'", "'union'", "'type'", "'init'", "'private'", "'get'", "'repeated'", 
		"'use'", "'if'", "'error'", "'and'", "'or'", "'not'", "'this'", "'string'", 
		"'int'", "'bool'", "'+'", "'-'", "'*'", "'/'", "'%'", "'=='", "'!='", 
		"'<'", "'>'", "'<='", "'>='", "'='", "'&&'", "'||'", "'{'", "'}'", "'('", 
		"')'", "'['", "']'", "'.'", "','", "':'", "';'", "'?'", "'->'", "'|'", 
		undefined, undefined, undefined, undefined, "'true'", "'false'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "WS", "LINE_COMMENT", "BLOCK_COMMENT", "SCHEMA_DIRECTIVE", 
		"HASH_COMMENT", "SCHEMA", "STRUCT", "UNION", "TYPE", "INIT", "PRIVATE", 
		"GET", "REPEATED", "USE", "IF", "ERROR", "AND", "OR", "NOT", "THIS", "STRING_TYPE", 
		"INT_TYPE", "BOOL_TYPE", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "MODULO", 
		"EQUALS", "NOT_EQUALS", "LESS_THAN", "GREATER_THAN", "LESS_EQUALS", "GREATER_EQUALS", 
		"ASSIGN", "LOGICAL_AND", "LOGICAL_OR", "LBRACE", "RBRACE", "LPAREN", "RPAREN", 
		"LBRACKET", "RBRACKET", "DOT", "COMMA", "COLON", "SEMICOLON", "QUESTION", 
		"ARROW", "PIPE", "STRING_LITERAL", "DOUBLE_STRING_LITERAL", "TEMPLATE_STRING_START", 
		"INTEGER_LITERAL", "TRUE", "FALSE", "ANNOTATION", "IDENTIFIER", "TEMPLATE_STRING_END", 
		"TEMPLATE_STRING_PART", "TEMPLATE_INTERPOLATION",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CanonLexer._LITERAL_NAMES, CanonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CanonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CanonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "CanonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return CanonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CanonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CanonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CanonLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02?\u01AF\b\x01" +
		"\b\x01\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06" +
		"\t\x06\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f" +
		"\x04\r\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04" +
		"\x12\t\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04" +
		"\x17\t\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04" +
		"\x1C\t\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04" +
		"\"\t\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*" +
		"\t*\x04+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x04" +
		"3\t3\x044\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04" +
		"<\t<\x04=\t=\x04>\t>\x04?\t?\x03\x02\x06\x02\x82\n\x02\r\x02\x0E\x02\x83" +
		"\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x07\x03\x8C\n\x03\f\x03" +
		"\x0E\x03\x8F\v\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x07" +
		"\x04\x97\n\x04\f\x04\x0E\x04\x9A\v\x04\x03\x04\x03\x04\x03\x04\x03\x04" +
		"\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05" +
		"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06" +
		"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06" +
		"\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x05\x06" +
		"\xC3\n\x06\x03\x06\x07\x06\xC6\n\x06\f\x06\x0E\x06\xC9\v\x06\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03" +
		"\"\x03\"\x03#\x03#\x03#\x03$\x03$\x03%\x03%\x03%\x03&\x03&\x03&\x03\'" +
		"\x03\'\x03(\x03(\x03)\x03)\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03-\x03" +
		".\x03.\x03/\x03/\x030\x030\x031\x031\x032\x032\x032\x033\x033\x034\x03" +
		"4\x034\x074\u016D\n4\f4\x0E4\u0170\v4\x034\x034\x035\x035\x035\x075\u0177" +
		"\n5\f5\x0E5\u017A\v5\x035\x035\x036\x036\x036\x036\x037\x067\u0183\n7" +
		"\r7\x0E7\u0184\x038\x038\x038\x038\x038\x039\x039\x039\x039\x039\x039" +
		"\x03:\x03:\x03:\x03;\x03;\x07;\u0197\n;\f;\x0E;\u019A\v;\x03<\x03<\x03" +
		"<\x03=\x03=\x03=\x03=\x03>\x06>\u01A4\n>\r>\x0E>\u01A5\x03?\x03?\x03?" +
		"\x07?\u01AB\n?\f?\x0E?\u01AE\v?\x03\x98\x02\x02@\x04\x02\x03\x06\x02\x04" +
		"\b\x02\x05\n\x02\x06\f\x02\x07\x0E\x02\b\x10\x02\t\x12\x02\n\x14\x02\v" +
		"\x16\x02\f\x18\x02\r\x1A\x02\x0E\x1C\x02\x0F\x1E\x02\x10 \x02\x11\"\x02" +
		"\x12$\x02\x13&\x02\x14(\x02\x15*\x02\x16,\x02\x17.\x02\x180\x02\x192\x02" +
		"\x1A4\x02\x1B6\x02\x1C8\x02\x1D:\x02\x1E<\x02\x1F>\x02 @\x02!B\x02\"D" +
		"\x02#F\x02$H\x02%J\x02&L\x02\'N\x02(P\x02)R\x02*T\x02+V\x02,X\x02-Z\x02" +
		".\\\x02/^\x020`\x021b\x022d\x023f\x024h\x025j\x026l\x027n\x028p\x029r" +
		"\x02:t\x02;v\x02<x\x02\x02z\x02=|\x02>~\x02?\x04\x02\x03\x11\x05\x02\v" +
		"\f\x0F\x0F\"\"\x04\x02\f\f\x0F\x0F\x05\x02\f\f\x0F\x0Fuu\x05\x02\f\f\x0F" +
		"\x0Fee\x05\x02\f\f\x0F\x0Fjj\x05\x02\f\f\x0F\x0Fgg\x05\x02\f\f\x0F\x0F" +
		"oo\x05\x02\f\f\x0F\x0Fcc\x06\x02\f\f\x0F\x0F))^^\x06\x02\f\f\x0F\x0F$" +
		"$^^\x03\x022;\x05\x02C\\aac|\x06\x022;C\\aac|\n\x02$$))^^ddhhppttvv\x04" +
		"\x02&&bb\x02\u01BD\x02\x04\x03\x02\x02\x02\x02\x06\x03\x02\x02\x02\x02" +
		"\b\x03\x02\x02\x02\x02\n\x03\x02\x02\x02\x02\f\x03\x02\x02\x02\x02\x0E" +
		"\x03\x02\x02\x02\x02\x10\x03\x02\x02\x02\x02\x12\x03\x02\x02\x02\x02\x14" +
		"\x03\x02\x02\x02\x02\x16\x03\x02\x02\x02\x02\x18\x03\x02\x02\x02\x02\x1A" +
		"\x03\x02\x02\x02\x02\x1C\x03\x02\x02\x02\x02\x1E\x03\x02\x02\x02\x02 " +
		"\x03\x02\x02\x02\x02\"\x03\x02\x02\x02\x02$\x03\x02\x02\x02\x02&\x03\x02" +
		"\x02\x02\x02(\x03\x02\x02\x02\x02*\x03\x02\x02\x02\x02,\x03\x02\x02\x02" +
		"\x02.\x03\x02\x02\x02\x020\x03\x02\x02\x02\x022\x03\x02\x02\x02\x024\x03" +
		"\x02\x02\x02\x026\x03\x02\x02\x02\x028\x03\x02\x02\x02\x02:\x03\x02\x02" +
		"\x02\x02<\x03\x02\x02\x02\x02>\x03\x02\x02\x02\x02@\x03\x02\x02\x02\x02" +
		"B\x03\x02\x02\x02\x02D\x03\x02\x02\x02\x02F\x03\x02\x02\x02\x02H\x03\x02" +
		"\x02\x02\x02J\x03\x02\x02\x02\x02L\x03\x02\x02\x02\x02N\x03\x02\x02\x02" +
		"\x02P\x03\x02\x02\x02\x02R\x03\x02\x02\x02\x02T\x03\x02\x02\x02\x02V\x03" +
		"\x02\x02\x02\x02X\x03\x02\x02\x02\x02Z\x03\x02\x02\x02\x02\\\x03\x02\x02" +
		"\x02\x02^\x03\x02\x02\x02\x02`\x03\x02\x02\x02\x02b\x03\x02\x02\x02\x02" +
		"d\x03\x02\x02\x02\x02f\x03\x02\x02\x02\x02h\x03\x02\x02\x02\x02j\x03\x02" +
		"\x02\x02\x02l\x03\x02\x02\x02\x02n\x03\x02\x02\x02\x02p\x03\x02\x02\x02" +
		"\x02r\x03\x02\x02\x02\x02t\x03\x02\x02\x02\x02v\x03\x02\x02\x02\x03z\x03" +
		"\x02\x02\x02\x03|\x03\x02\x02\x02\x03~\x03\x02\x02\x02\x04\x81\x03\x02" +
		"\x02\x02\x06\x87\x03\x02\x02\x02\b\x92\x03\x02\x02\x02\n\xA0\x03\x02\x02" +
		"\x02\f\xA8\x03\x02\x02\x02\x0E\xCC\x03\x02\x02\x02\x10\xD3\x03\x02\x02" +
		"\x02\x12\xDA\x03\x02\x02\x02\x14\xE0\x03\x02\x02\x02\x16\xE5\x03\x02\x02" +
		"\x02\x18\xEA\x03\x02\x02\x02\x1A\xF2\x03\x02\x02\x02\x1C\xF6\x03\x02\x02" +
		"\x02\x1E\xFF\x03\x02\x02\x02 \u0103\x03\x02\x02\x02\"\u0106\x03\x02\x02" +
		"\x02$\u010C\x03\x02\x02\x02&\u0110\x03\x02\x02\x02(\u0113\x03\x02\x02" +
		"\x02*\u0117\x03\x02\x02\x02,\u011C\x03\x02\x02\x02.\u0123\x03\x02\x02" +
		"\x020\u0127\x03\x02\x02\x022\u012C\x03\x02\x02\x024\u012E\x03\x02\x02" +
		"\x026\u0130\x03\x02\x02\x028\u0132\x03\x02\x02\x02:\u0134\x03\x02\x02" +
		"\x02<\u0136\x03\x02\x02\x02>\u0139\x03\x02\x02\x02@\u013C\x03\x02\x02" +
		"\x02B\u013E\x03\x02\x02\x02D\u0140\x03\x02\x02\x02F\u0143\x03\x02\x02" +
		"\x02H\u0146\x03\x02\x02\x02J\u0148\x03\x02\x02\x02L\u014B\x03\x02\x02" +
		"\x02N\u014E\x03\x02\x02\x02P\u0150\x03\x02\x02\x02R\u0152\x03\x02\x02" +
		"\x02T\u0154\x03\x02\x02\x02V\u0156\x03\x02\x02\x02X\u0158\x03\x02\x02" +
		"\x02Z\u015A\x03\x02\x02\x02\\\u015C\x03\x02\x02\x02^\u015E\x03\x02\x02" +
		"\x02`\u0160\x03\x02\x02\x02b\u0162\x03\x02\x02\x02d\u0164\x03\x02\x02" +
		"\x02f\u0167\x03\x02\x02\x02h\u0169\x03\x02\x02\x02j\u0173\x03\x02\x02" +
		"\x02l\u017D\x03\x02\x02\x02n\u0182\x03\x02\x02\x02p\u0186\x03\x02\x02" +
		"\x02r\u018B\x03\x02\x02\x02t\u0191\x03\x02\x02\x02v\u0194\x03\x02\x02" +
		"\x02x\u019B\x03\x02\x02\x02z\u019E\x03\x02\x02\x02|\u01A3\x03\x02\x02" +
		"\x02~\u01A7\x03\x02\x02\x02\x80\x82\t\x02\x02\x02\x81\x80\x03\x02\x02" +
		"\x02\x82\x83\x03\x02\x02\x02\x83\x81\x03\x02\x02\x02\x83\x84\x03\x02\x02" +
		"\x02\x84\x85\x03\x02\x02\x02\x85\x86\b\x02\x02\x02\x86\x05\x03\x02\x02" +
		"\x02\x87\x88\x071\x02\x02\x88\x89\x071\x02\x02\x89\x8D\x03\x02\x02\x02" +
		"\x8A\x8C\n\x03\x02\x02\x8B\x8A\x03\x02\x02\x02\x8C\x8F\x03\x02\x02\x02" +
		"\x8D\x8B\x03\x02\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E\x90\x03\x02\x02\x02" +
		"\x8F\x8D\x03\x02\x02\x02\x90\x91\b\x03\x02\x02\x91\x07\x03\x02\x02\x02" +
		"\x92\x93\x071\x02\x02\x93\x94\x07,\x02\x02\x94\x98\x03\x02\x02\x02\x95" +
		"\x97\v\x02\x02\x02\x96\x95\x03\x02\x02\x02\x97\x9A\x03\x02\x02\x02\x98" +
		"\x99\x03\x02\x02\x02\x98\x96\x03\x02\x02\x02\x99\x9B\x03\x02\x02\x02\x9A" +
		"\x98\x03\x02\x02\x02\x9B\x9C\x07,\x02\x02\x9C\x9D\x071\x02\x02\x9D\x9E" +
		"\x03\x02\x02\x02\x9E\x9F\b\x04\x02\x02\x9F\t\x03\x02\x02\x02\xA0\xA1\x07" +
		"%\x02\x02\xA1\xA2\x07u\x02\x02\xA2\xA3\x07e\x02\x02\xA3\xA4\x07j\x02\x02" +
		"\xA4\xA5\x07g\x02\x02\xA5\xA6\x07o\x02\x02\xA6\xA7\x07c\x02\x02\xA7\v" +
		"\x03\x02\x02\x02\xA8\xC2\x07%\x02\x02\xA9\xC3\n\x04\x02\x02\xAA\xAB\x07" +
		"u\x02\x02\xAB\xC3\n\x05\x02\x02\xAC\xAD\x07u\x02\x02\xAD\xAE\x07e\x02" +
		"\x02\xAE\xAF\x03\x02\x02\x02\xAF\xC3\n\x06\x02\x02\xB0\xB1\x07u\x02\x02" +
		"\xB1\xB2\x07e\x02\x02\xB2\xB3\x07j\x02\x02\xB3\xB4\x03\x02\x02\x02\xB4" +
		"\xC3\n\x07\x02\x02\xB5\xB6\x07u\x02\x02\xB6\xB7\x07e\x02\x02\xB7\xB8\x07" +
		"j\x02\x02\xB8\xB9\x07g\x02\x02\xB9\xBA\x03\x02\x02\x02\xBA\xC3\n\b\x02" +
		"\x02\xBB\xBC\x07u\x02\x02\xBC\xBD\x07e\x02\x02\xBD\xBE\x07j\x02\x02\xBE" +
		"\xBF\x07g\x02\x02\xBF\xC0\x07o\x02\x02\xC0\xC1\x03\x02\x02\x02\xC1\xC3" +
		"\n\t\x02\x02\xC2\xA9\x03\x02\x02\x02\xC2\xAA\x03\x02\x02\x02\xC2\xAC\x03" +
		"\x02\x02\x02\xC2\xB0\x03\x02\x02\x02\xC2\xB5\x03\x02\x02\x02\xC2\xBB\x03" +
		"\x02\x02\x02\xC3\xC7\x03\x02\x02\x02\xC4\xC6\n\x03\x02\x02\xC5\xC4\x03" +
		"\x02\x02\x02\xC6\xC9\x03\x02\x02\x02\xC7\xC5\x03\x02\x02\x02\xC7\xC8\x03" +
		"\x02\x02\x02\xC8\xCA\x03\x02\x02\x02\xC9\xC7\x03\x02\x02\x02\xCA\xCB\b" +
		"\x06\x02\x02\xCB\r\x03\x02\x02\x02\xCC\xCD\x07u\x02\x02\xCD\xCE\x07e\x02" +
		"\x02\xCE\xCF\x07j\x02\x02\xCF\xD0\x07g\x02\x02\xD0\xD1\x07o\x02\x02\xD1" +
		"\xD2\x07c\x02\x02\xD2\x0F\x03\x02\x02\x02\xD3\xD4\x07u\x02\x02\xD4\xD5" +
		"\x07v\x02\x02\xD5\xD6\x07t\x02\x02\xD6\xD7\x07w\x02\x02\xD7\xD8\x07e\x02" +
		"\x02\xD8\xD9\x07v\x02\x02\xD9\x11\x03\x02\x02\x02\xDA\xDB\x07w\x02\x02" +
		"\xDB\xDC\x07p\x02\x02\xDC\xDD\x07k\x02\x02\xDD\xDE\x07q\x02\x02\xDE\xDF" +
		"\x07p\x02\x02\xDF\x13\x03\x02\x02\x02\xE0\xE1\x07v\x02\x02\xE1\xE2\x07" +
		"{\x02\x02\xE2\xE3\x07r\x02\x02\xE3\xE4\x07g\x02\x02\xE4\x15\x03\x02\x02" +
		"\x02\xE5\xE6\x07k\x02\x02\xE6\xE7\x07p\x02\x02\xE7\xE8\x07k\x02\x02\xE8" +
		"\xE9\x07v\x02\x02\xE9\x17\x03\x02\x02\x02\xEA\xEB\x07r\x02\x02\xEB\xEC" +
		"\x07t\x02\x02\xEC\xED\x07k\x02\x02\xED\xEE\x07x\x02\x02\xEE\xEF\x07c\x02" +
		"\x02\xEF\xF0\x07v\x02\x02\xF0\xF1\x07g\x02\x02\xF1\x19\x03\x02\x02\x02" +
		"\xF2\xF3\x07i\x02\x02\xF3\xF4\x07g\x02\x02\xF4\xF5\x07v\x02\x02\xF5\x1B" +
		"\x03\x02\x02\x02\xF6\xF7\x07t\x02\x02\xF7\xF8\x07g\x02\x02\xF8\xF9\x07" +
		"r\x02\x02\xF9\xFA\x07g\x02\x02\xFA\xFB\x07c\x02\x02\xFB\xFC\x07v\x02\x02" +
		"\xFC\xFD\x07g\x02\x02\xFD\xFE\x07f\x02\x02\xFE\x1D\x03\x02\x02\x02\xFF" +
		"\u0100\x07w\x02\x02\u0100\u0101\x07u\x02\x02\u0101\u0102\x07g\x02\x02" +
		"\u0102\x1F\x03\x02\x02\x02\u0103\u0104\x07k\x02\x02\u0104\u0105\x07h\x02" +
		"\x02\u0105!\x03\x02\x02\x02\u0106\u0107\x07g\x02\x02\u0107\u0108\x07t" +
		"\x02\x02\u0108\u0109\x07t\x02\x02\u0109\u010A\x07q\x02\x02\u010A\u010B" +
		"\x07t\x02\x02\u010B#\x03\x02\x02\x02\u010C\u010D\x07c\x02\x02\u010D\u010E" +
		"\x07p\x02\x02\u010E\u010F\x07f\x02\x02\u010F%\x03\x02\x02\x02\u0110\u0111" +
		"\x07q\x02\x02\u0111\u0112\x07t\x02\x02\u0112\'\x03\x02\x02\x02\u0113\u0114" +
		"\x07p\x02\x02\u0114\u0115\x07q\x02\x02\u0115\u0116\x07v\x02\x02\u0116" +
		")\x03\x02\x02\x02\u0117\u0118\x07v\x02\x02\u0118\u0119\x07j\x02\x02\u0119" +
		"\u011A\x07k\x02\x02\u011A\u011B\x07u\x02\x02\u011B+\x03\x02\x02\x02\u011C" +
		"\u011D\x07u\x02\x02\u011D\u011E\x07v\x02\x02\u011E\u011F\x07t\x02\x02" +
		"\u011F\u0120\x07k\x02\x02\u0120\u0121\x07p\x02\x02\u0121\u0122\x07i\x02" +
		"\x02\u0122-\x03\x02\x02\x02\u0123\u0124\x07k\x02\x02\u0124\u0125\x07p" +
		"\x02\x02\u0125\u0126\x07v\x02\x02\u0126/\x03\x02\x02\x02\u0127\u0128\x07" +
		"d\x02\x02\u0128\u0129\x07q\x02\x02\u0129\u012A\x07q\x02\x02\u012A\u012B" +
		"\x07n\x02\x02\u012B1\x03\x02\x02\x02\u012C\u012D\x07-\x02\x02\u012D3\x03" +
		"\x02\x02\x02\u012E\u012F\x07/\x02\x02\u012F5\x03\x02\x02\x02\u0130\u0131" +
		"\x07,\x02\x02\u01317\x03\x02\x02\x02\u0132\u0133\x071\x02\x02\u01339\x03" +
		"\x02\x02\x02\u0134\u0135\x07\'\x02\x02\u0135;\x03\x02\x02\x02\u0136\u0137" +
		"\x07?\x02\x02\u0137\u0138\x07?\x02\x02\u0138=\x03\x02\x02\x02\u0139\u013A" +
		"\x07#\x02\x02\u013A\u013B\x07?\x02\x02\u013B?\x03\x02\x02\x02\u013C\u013D" +
		"\x07>\x02\x02\u013DA\x03\x02\x02\x02\u013E\u013F\x07@\x02\x02\u013FC\x03" +
		"\x02\x02\x02\u0140\u0141\x07>\x02\x02\u0141\u0142\x07?\x02\x02\u0142E" +
		"\x03\x02\x02\x02\u0143\u0144\x07@\x02\x02\u0144\u0145\x07?\x02\x02\u0145" +
		"G\x03\x02\x02\x02\u0146\u0147\x07?\x02\x02\u0147I\x03\x02\x02\x02\u0148" +
		"\u0149\x07(\x02\x02\u0149\u014A\x07(\x02\x02\u014AK\x03\x02\x02\x02\u014B" +
		"\u014C\x07~\x02\x02\u014C\u014D\x07~\x02\x02\u014DM\x03\x02\x02\x02\u014E" +
		"\u014F\x07}\x02\x02\u014FO\x03\x02\x02\x02\u0150\u0151\x07\x7F\x02\x02" +
		"\u0151Q\x03\x02\x02\x02\u0152\u0153\x07*\x02\x02\u0153S\x03\x02\x02\x02" +
		"\u0154\u0155\x07+\x02\x02\u0155U\x03\x02\x02\x02\u0156\u0157\x07]\x02" +
		"\x02\u0157W\x03\x02\x02\x02\u0158\u0159\x07_\x02\x02\u0159Y\x03\x02\x02" +
		"\x02\u015A\u015B\x070\x02\x02\u015B[\x03\x02\x02\x02\u015C\u015D\x07." +
		"\x02\x02\u015D]\x03\x02\x02\x02\u015E\u015F\x07<\x02\x02\u015F_\x03\x02" +
		"\x02\x02\u0160\u0161\x07=\x02\x02\u0161a\x03\x02\x02\x02\u0162\u0163\x07" +
		"A\x02\x02\u0163c\x03\x02\x02\x02\u0164\u0165\x07/\x02\x02\u0165\u0166" +
		"\x07@\x02\x02\u0166e\x03\x02\x02\x02\u0167\u0168\x07~\x02\x02\u0168g\x03" +
		"\x02\x02\x02\u0169\u016E\x07)\x02\x02\u016A\u016D\n\n\x02\x02\u016B\u016D" +
		"\x05x<\x02\u016C\u016A\x03\x02\x02\x02\u016C\u016B\x03\x02\x02\x02\u016D" +
		"\u0170\x03\x02\x02\x02\u016E\u016C\x03\x02\x02\x02\u016E\u016F\x03\x02" +
		"\x02\x02\u016F\u0171\x03\x02\x02\x02\u0170\u016E\x03\x02\x02\x02\u0171" +
		"\u0172\x07)\x02\x02\u0172i\x03\x02\x02\x02\u0173\u0178\x07$\x02\x02\u0174" +
		"\u0177\n\v\x02\x02\u0175\u0177\x05x<\x02\u0176\u0174\x03\x02\x02\x02\u0176" +
		"\u0175\x03\x02\x02\x02\u0177\u017A\x03\x02\x02\x02\u0178\u0176\x03\x02" +
		"\x02\x02\u0178\u0179\x03\x02\x02\x02\u0179\u017B\x03\x02\x02\x02\u017A" +
		"\u0178\x03\x02\x02\x02\u017B\u017C\x07$\x02\x02\u017Ck\x03\x02\x02\x02" +
		"\u017D\u017E\x07b\x02\x02\u017E\u017F\x03\x02\x02\x02\u017F\u0180\b6\x03" +
		"\x02\u0180m\x03\x02\x02\x02\u0181\u0183\t\f\x02\x02\u0182\u0181\x03\x02" +
		"\x02\x02\u0183\u0184\x03\x02\x02\x02\u0184\u0182\x03\x02\x02\x02\u0184" +
		"\u0185\x03\x02\x02\x02\u0185o\x03\x02\x02\x02\u0186\u0187\x07v\x02\x02" +
		"\u0187\u0188\x07t\x02\x02\u0188\u0189\x07w\x02\x02\u0189\u018A\x07g\x02" +
		"\x02\u018Aq\x03\x02\x02\x02\u018B\u018C\x07h\x02\x02\u018C\u018D\x07c" +
		"\x02\x02\u018D\u018E\x07n\x02\x02\u018E\u018F\x07u\x02\x02\u018F\u0190" +
		"\x07g\x02\x02\u0190s\x03\x02\x02\x02\u0191\u0192\x07B\x02\x02\u0192\u0193" +
		"\x05v;\x02\u0193u\x03\x02\x02\x02\u0194\u0198\t\r\x02\x02\u0195\u0197" +
		"\t\x0E\x02\x02\u0196\u0195\x03\x02\x02\x02\u0197\u019A\x03\x02\x02\x02" +
		"\u0198\u0196\x03\x02\x02\x02\u0198\u0199\x03\x02\x02\x02\u0199w\x03\x02" +
		"\x02\x02\u019A\u0198\x03\x02\x02\x02\u019B\u019C\x07^\x02\x02\u019C\u019D" +
		"\t\x0F\x02\x02\u019Dy\x03\x02\x02\x02\u019E\u019F\x07b\x02\x02\u019F\u01A0" +
		"\x03\x02\x02\x02\u01A0\u01A1\b=\x04\x02\u01A1{\x03\x02\x02\x02\u01A2\u01A4" +
		"\n\x10\x02\x02\u01A3\u01A2\x03\x02\x02\x02\u01A4\u01A5\x03\x02\x02\x02" +
		"\u01A5\u01A3\x03\x02\x02\x02\u01A5\u01A6\x03\x02\x02\x02\u01A6}\x03\x02" +
		"\x02\x02\u01A7\u01A8\x07&\x02\x02\u01A8\u01AC\t\r\x02\x02\u01A9\u01AB" +
		"\t\x0E\x02\x02\u01AA\u01A9\x03\x02\x02\x02\u01AB\u01AE\x03\x02\x02\x02" +
		"\u01AC\u01AA\x03\x02\x02\x02\u01AC\u01AD\x03\x02\x02\x02\u01AD\x7F\x03" +
		"\x02\x02\x02\u01AE\u01AC\x03\x02\x02\x02\x11\x02\x03\x83\x8D\x98\xC2\xC7" +
		"\u016C\u016E\u0176\u0178\u0184\u0198\u01A5\u01AC\x05\b\x02\x02\x07\x03" +
		"\x02\x06\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CanonLexer.__ATN) {
			CanonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CanonLexer._serializedATN));
		}

		return CanonLexer.__ATN;
	}

}

