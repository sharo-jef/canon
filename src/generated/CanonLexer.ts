// Generated from definition/CanonLexer.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CanonLexer extends Lexer {
	public static readonly SCHEMA = 1;
	public static readonly STRUCT = 2;
	public static readonly MIXIN = 3;
	public static readonly FUN = 4;
	public static readonly DECLARE = 5;
	public static readonly VAL = 6;
	public static readonly VAR = 7;
	public static readonly RETURN = 8;
	public static readonly FOR = 9;
	public static readonly IN = 10;
	public static readonly THIS = 11;
	public static readonly STRING_TYPE = 12;
	public static readonly INT_TYPE = 13;
	public static readonly SCHEMA_DIRECTIVE = 14;
	public static readonly INTERPOLATION_START = 15;
	public static readonly PLUS = 16;
	public static readonly MINUS = 17;
	public static readonly MULTIPLY = 18;
	public static readonly DIVIDE = 19;
	public static readonly EQUALS = 20;
	public static readonly NOT_EQUALS = 21;
	public static readonly LESS_THAN = 22;
	public static readonly GREATER_THAN = 23;
	public static readonly LESS_EQUALS = 24;
	public static readonly GREATER_EQUALS = 25;
	public static readonly ASSIGN = 26;
	public static readonly RANGE = 27;
	public static readonly DOT = 28;
	public static readonly SEMICOLON = 29;
	public static readonly COMMA = 30;
	public static readonly COLON = 31;
	public static readonly QUESTION = 32;
	public static readonly AT = 33;
	public static readonly LPAREN = 34;
	public static readonly RPAREN = 35;
	public static readonly LBRACE = 36;
	public static readonly RBRACE = 37;
	public static readonly LBRACKET = 38;
	public static readonly RBRACKET = 39;
	public static readonly BACKTICK = 40;
	public static readonly STRING_LITERAL = 41;
	public static readonly INTEGER_LITERAL = 42;
	public static readonly IDENTIFIER = 43;
	public static readonly COMMENT = 44;
	public static readonly WS = 45;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"SCHEMA", "STRUCT", "MIXIN", "FUN", "DECLARE", "VAL", "VAR", "RETURN", 
		"FOR", "IN", "THIS", "STRING_TYPE", "INT_TYPE", "SCHEMA_DIRECTIVE", "INTERPOLATION_START", 
		"PLUS", "MINUS", "MULTIPLY", "DIVIDE", "EQUALS", "NOT_EQUALS", "LESS_THAN", 
		"GREATER_THAN", "LESS_EQUALS", "GREATER_EQUALS", "ASSIGN", "RANGE", "DOT", 
		"SEMICOLON", "COMMA", "COLON", "QUESTION", "AT", "LPAREN", "RPAREN", "LBRACE", 
		"RBRACE", "LBRACKET", "RBRACKET", "BACKTICK", "STRING_LITERAL", "INTEGER_LITERAL", 
		"IDENTIFIER", "COMMENT", "WS", "UNICODE_CHAR",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'schema'", "'struct'", "'mixin'", "'fun'", "'declare'", "'val'", 
		"'var'", "'return'", "'for'", "'in'", "'this'", "'string'", "'int'", "'#schema'", 
		"'${'", "'+'", "'-'", "'*'", "'/'", "'=='", "'!='", "'<'", "'>'", "'<='", 
		"'>='", "'='", "'..'", "'.'", "';'", "','", "':'", "'?'", "'@'", "'('", 
		"')'", "'{'", "'}'", "'['", "']'", "'`'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "SCHEMA", "STRUCT", "MIXIN", "FUN", "DECLARE", "VAL", "VAR", 
		"RETURN", "FOR", "IN", "THIS", "STRING_TYPE", "INT_TYPE", "SCHEMA_DIRECTIVE", 
		"INTERPOLATION_START", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "EQUALS", 
		"NOT_EQUALS", "LESS_THAN", "GREATER_THAN", "LESS_EQUALS", "GREATER_EQUALS", 
		"ASSIGN", "RANGE", "DOT", "SEMICOLON", "COMMA", "COLON", "QUESTION", "AT", 
		"LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "BACKTICK", 
		"STRING_LITERAL", "INTEGER_LITERAL", "IDENTIFIER", "COMMENT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CanonLexer._LITERAL_NAMES, CanonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CanonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CanonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "CanonLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return CanonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CanonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CanonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CanonLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02/\u011D\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03" +
		"\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03" +
		"\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03" +
		"\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03" +
		"\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03" +
		"\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"" +
		"\x03\"\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03" +
		")\x03)\x03*\x03*\x03*\x03*\x07*\xEC\n*\f*\x0E*\xEF\v*\x03*\x03*\x03*\x03" +
		"*\x03*\x07*\xF6\n*\f*\x0E*\xF9\v*\x03*\x05*\xFC\n*\x03+\x06+\xFF\n+\r" +
		"+\x0E+\u0100\x03,\x03,\x07,\u0105\n,\f,\x0E,\u0108\v,\x03-\x03-\x03-\x03" +
		"-\x07-\u010E\n-\f-\x0E-\u0111\v-\x03-\x03-\x03.\x06.\u0116\n.\r.\x0E." +
		"\u0117\x03.\x03.\x03/\x03/\x02\x02\x020\x03\x02\x03\x05\x02\x04\x07\x02" +
		"\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02" +
		"\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12" +
		"#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02" +
		"\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C" +
		"\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02" +
		".[\x02/]\x02\x02\x03\x02\t\x05\x02\f\f\x0F\x0F$$\x05\x02\f\f\x0F\x0F)" +
		")\x03\x022;\x05\x02C\\aac|\x06\x022;C\\aac|\x04\x02\f\f\x0F\x0F\x05\x02" +
		"\v\f\x0F\x0F\"\"\x02\u0124\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03" +
		"\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02" +
		"\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02" +
		"[\x03\x02\x02\x02\x03_\x03\x02\x02\x02\x05f\x03\x02\x02\x02\x07m\x03\x02" +
		"\x02\x02\ts\x03\x02\x02\x02\vw\x03\x02\x02\x02\r\x7F\x03\x02\x02\x02\x0F" +
		"\x83\x03\x02\x02\x02\x11\x87\x03\x02\x02\x02\x13\x8E\x03\x02\x02\x02\x15" +
		"\x92\x03\x02\x02\x02\x17\x95\x03\x02\x02\x02\x19\x9A\x03\x02\x02\x02\x1B" +
		"\xA1\x03\x02\x02\x02\x1D\xA5\x03\x02\x02\x02\x1F\xAD\x03\x02\x02\x02!" +
		"\xB0\x03\x02\x02\x02#\xB2\x03\x02\x02\x02%\xB4\x03\x02\x02\x02\'\xB6\x03" +
		"\x02\x02\x02)\xB8\x03\x02\x02\x02+\xBB\x03\x02\x02\x02-\xBE\x03\x02\x02" +
		"\x02/\xC0\x03\x02\x02\x021\xC2\x03\x02\x02\x023\xC5\x03\x02\x02\x025\xC8" +
		"\x03\x02\x02\x027\xCA\x03\x02\x02\x029\xCD\x03\x02\x02\x02;\xCF\x03\x02" +
		"\x02\x02=\xD1\x03\x02\x02\x02?\xD3\x03\x02\x02\x02A\xD5\x03\x02\x02\x02" +
		"C\xD7\x03\x02\x02\x02E\xD9\x03\x02\x02\x02G\xDB\x03\x02\x02\x02I\xDD\x03" +
		"\x02\x02\x02K\xDF\x03\x02\x02\x02M\xE1\x03\x02\x02\x02O\xE3\x03\x02\x02" +
		"\x02Q\xE5\x03\x02\x02\x02S\xFB\x03\x02\x02\x02U\xFE\x03\x02\x02\x02W\u0102" +
		"\x03\x02\x02\x02Y\u0109\x03\x02\x02\x02[\u0115\x03\x02\x02\x02]\u011B" +
		"\x03\x02\x02\x02_`\x07u\x02\x02`a\x07e\x02\x02ab\x07j\x02\x02bc\x07g\x02" +
		"\x02cd\x07o\x02\x02de\x07c\x02\x02e\x04\x03\x02\x02\x02fg\x07u\x02\x02" +
		"gh\x07v\x02\x02hi\x07t\x02\x02ij\x07w\x02\x02jk\x07e\x02\x02kl\x07v\x02" +
		"\x02l\x06\x03\x02\x02\x02mn\x07o\x02\x02no\x07k\x02\x02op\x07z\x02\x02" +
		"pq\x07k\x02\x02qr\x07p\x02\x02r\b\x03\x02\x02\x02st\x07h\x02\x02tu\x07" +
		"w\x02\x02uv\x07p\x02\x02v\n\x03\x02\x02\x02wx\x07f\x02\x02xy\x07g\x02" +
		"\x02yz\x07e\x02\x02z{\x07n\x02\x02{|\x07c\x02\x02|}\x07t\x02\x02}~\x07" +
		"g\x02\x02~\f\x03\x02\x02\x02\x7F\x80\x07x\x02\x02\x80\x81\x07c\x02\x02" +
		"\x81\x82\x07n\x02\x02\x82\x0E\x03\x02\x02\x02\x83\x84\x07x\x02\x02\x84" +
		"\x85\x07c\x02\x02\x85\x86\x07t\x02\x02\x86\x10\x03\x02\x02\x02\x87\x88" +
		"\x07t\x02\x02\x88\x89\x07g\x02\x02\x89\x8A\x07v\x02\x02\x8A\x8B\x07w\x02" +
		"\x02\x8B\x8C\x07t\x02\x02\x8C\x8D\x07p\x02\x02\x8D\x12\x03\x02\x02\x02" +
		"\x8E\x8F\x07h\x02\x02\x8F\x90\x07q\x02\x02\x90\x91\x07t\x02\x02\x91\x14" +
		"\x03\x02\x02\x02\x92\x93\x07k\x02\x02\x93\x94\x07p\x02\x02\x94\x16\x03" +
		"\x02\x02\x02\x95\x96\x07v\x02\x02\x96\x97\x07j\x02\x02\x97\x98\x07k\x02" +
		"\x02\x98\x99\x07u\x02\x02\x99\x18\x03\x02\x02\x02\x9A\x9B\x07u\x02\x02" +
		"\x9B\x9C\x07v\x02\x02\x9C\x9D\x07t\x02\x02\x9D\x9E\x07k\x02\x02\x9E\x9F" +
		"\x07p\x02\x02\x9F\xA0\x07i\x02\x02\xA0\x1A\x03\x02\x02\x02\xA1\xA2\x07" +
		"k\x02\x02\xA2\xA3\x07p\x02\x02\xA3\xA4\x07v\x02\x02\xA4\x1C\x03\x02\x02" +
		"\x02\xA5\xA6\x07%\x02\x02\xA6\xA7\x07u\x02\x02\xA7\xA8\x07e\x02\x02\xA8" +
		"\xA9\x07j\x02\x02\xA9\xAA\x07g\x02\x02\xAA\xAB\x07o\x02\x02\xAB\xAC\x07" +
		"c\x02\x02\xAC\x1E\x03\x02\x02\x02\xAD\xAE\x07&\x02\x02\xAE\xAF\x07}\x02" +
		"\x02\xAF \x03\x02\x02\x02\xB0\xB1\x07-\x02\x02\xB1\"\x03\x02\x02\x02\xB2" +
		"\xB3\x07/\x02\x02\xB3$\x03\x02\x02\x02\xB4\xB5\x07,\x02\x02\xB5&\x03\x02" +
		"\x02\x02\xB6\xB7\x071\x02\x02\xB7(\x03\x02\x02\x02\xB8\xB9\x07?\x02\x02" +
		"\xB9\xBA\x07?\x02\x02\xBA*\x03\x02\x02\x02\xBB\xBC\x07#\x02\x02\xBC\xBD" +
		"\x07?\x02\x02\xBD,\x03\x02\x02\x02\xBE\xBF\x07>\x02\x02\xBF.\x03\x02\x02" +
		"\x02\xC0\xC1\x07@\x02\x02\xC10\x03\x02\x02\x02\xC2\xC3\x07>\x02\x02\xC3" +
		"\xC4\x07?\x02\x02\xC42\x03\x02\x02\x02\xC5\xC6\x07@\x02\x02\xC6\xC7\x07" +
		"?\x02\x02\xC74\x03\x02\x02\x02\xC8\xC9\x07?\x02\x02\xC96\x03\x02\x02\x02" +
		"\xCA\xCB\x070\x02\x02\xCB\xCC\x070\x02\x02\xCC8\x03\x02\x02\x02\xCD\xCE" +
		"\x070\x02\x02\xCE:\x03\x02\x02\x02\xCF\xD0\x07=\x02\x02\xD0<\x03\x02\x02" +
		"\x02\xD1\xD2\x07.\x02\x02\xD2>\x03\x02\x02\x02\xD3\xD4\x07<\x02\x02\xD4" +
		"@\x03\x02\x02\x02\xD5\xD6\x07A\x02\x02\xD6B\x03\x02\x02\x02\xD7\xD8\x07" +
		"B\x02\x02\xD8D\x03\x02\x02\x02\xD9\xDA\x07*\x02\x02\xDAF\x03\x02\x02\x02" +
		"\xDB\xDC\x07+\x02\x02\xDCH\x03\x02\x02\x02\xDD\xDE\x07}\x02\x02\xDEJ\x03" +
		"\x02\x02\x02\xDF\xE0\x07\x7F\x02\x02\xE0L\x03\x02\x02\x02\xE1\xE2\x07" +
		"]\x02\x02\xE2N\x03\x02\x02\x02\xE3\xE4\x07_\x02\x02\xE4P\x03\x02\x02\x02" +
		"\xE5\xE6\x07b\x02\x02\xE6R\x03\x02\x02\x02\xE7\xED\x07$\x02\x02\xE8\xEC" +
		"\n\x02\x02\x02\xE9\xEA\x07^\x02\x02\xEA\xEC\x07$\x02\x02\xEB\xE8\x03\x02" +
		"\x02\x02\xEB\xE9\x03\x02\x02\x02\xEC\xEF\x03\x02\x02\x02\xED\xEB\x03\x02" +
		"\x02\x02\xED\xEE\x03\x02\x02\x02\xEE\xF0\x03\x02\x02\x02\xEF\xED\x03\x02" +
		"\x02\x02\xF0\xFC\x07$\x02\x02\xF1\xF7\x07)\x02\x02\xF2\xF6\n\x03\x02\x02" +
		"\xF3\xF4\x07^\x02\x02\xF4\xF6\x07)\x02\x02\xF5\xF2\x03\x02\x02\x02\xF5" +
		"\xF3\x03\x02\x02\x02\xF6\xF9\x03\x02\x02\x02\xF7\xF5\x03\x02\x02\x02\xF7" +
		"\xF8\x03\x02\x02\x02\xF8\xFA\x03\x02\x02\x02\xF9\xF7\x03\x02\x02\x02\xFA" +
		"\xFC\x07)\x02\x02\xFB\xE7\x03\x02\x02\x02\xFB\xF1\x03\x02\x02\x02\xFC" +
		"T\x03\x02\x02\x02\xFD\xFF\t\x04\x02\x02\xFE\xFD\x03\x02\x02\x02\xFF\u0100" +
		"\x03\x02\x02\x02\u0100\xFE\x03\x02\x02\x02\u0100\u0101\x03\x02\x02\x02" +
		"\u0101V\x03\x02\x02\x02\u0102\u0106\t\x05\x02\x02\u0103\u0105\t\x06\x02" +
		"\x02\u0104\u0103\x03\x02\x02\x02\u0105\u0108\x03\x02\x02\x02\u0106\u0104" +
		"\x03\x02\x02\x02\u0106\u0107\x03\x02\x02\x02\u0107X\x03\x02\x02\x02\u0108" +
		"\u0106\x03\x02\x02\x02\u0109\u010A\x071\x02\x02\u010A\u010B\x071\x02\x02" +
		"\u010B\u010F\x03\x02\x02\x02\u010C\u010E\n\x07\x02\x02\u010D\u010C\x03" +
		"\x02\x02\x02\u010E\u0111\x03\x02\x02\x02\u010F\u010D\x03\x02\x02\x02\u010F" +
		"\u0110\x03\x02\x02\x02\u0110\u0112\x03\x02\x02\x02\u0111\u010F\x03\x02" +
		"\x02\x02\u0112\u0113\b-\x02\x02\u0113Z\x03\x02\x02\x02\u0114\u0116\t\b" +
		"\x02\x02\u0115\u0114\x03\x02\x02\x02\u0116\u0117\x03\x02\x02\x02\u0117" +
		"\u0115\x03\x02\x02\x02\u0117\u0118\x03\x02\x02\x02\u0118\u0119\x03\x02" +
		"\x02\x02\u0119\u011A\b.\x02\x02\u011A\\\x03\x02\x02\x02\u011B\u011C\n" +
		"\x07\x02\x02\u011C^\x03\x02\x02\x02\f\x02\xEB\xED\xF5\xF7\xFB\u0100\u0106" +
		"\u010F\u0117\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CanonLexer.__ATN) {
			CanonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CanonLexer._serializedATN));
		}

		return CanonLexer.__ATN;
	}

}

