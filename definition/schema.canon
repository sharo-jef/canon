// comment
# comment
/*
    comment
*/

schema {
    // Same as `PluginHeader: PluginHeader`
    @description 'A plugin header'
    PluginHeader
    pipeline: Pipeline
}

@description("Plugin header struct")
struct PluginHeader {
    name: string
    description?: string
    version: Version = Version {
        major = 0
        minor = 0
        patch = 1
    }
}

struct Version {
    init {
        validation()
    }
    init(this.major, this.minor, this.patch) {
        validation()
    }
    private validation() {
        if (this.major == 0 and this.minor == 0 and this.patch == 0) error('Given version is not valid')  // 実装が進んでから `${}` を使った構文を追加する
    }
    major: int
    minor: int
    patch: int
    private hoge: string
    get toString() {
        `$major.$minor.$path`
    }
}

struct Pipeline {
    repeated steps: Step[] {
        build -> BuildStep
        test -> TestStep
    }
}
union Step = BuildStep | TestStep
struct BuildStep {
    command: string
}
struct TestStep {
    script: string
}
